@using VariationPackCreator.Models

@code {
    [Parameter] public Pack Pack { get; set; }
}

<h3>
    <input type="text" @bind="Pack.Name" />
</h3>

<div class="accordion" id="accordionExample">
    @foreach (var prefabEntry in Pack.Entries)
    {
        <div class="accordion-item">
            <h2 class="accordion-header" id="heading-@prefabEntry.Key">
                <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapse-@prefabEntry.Key" aria-expanded="true" aria-controls="collapse-@prefabEntry.Key">
                    <!-- Bild und Name -->
                    <img src="thumbnails/@(prefabEntry.Key).png" alt="@prefabEntry.Key" class="prefab-image" />
                    <h4>@prefabEntry.Key</h4>
                </button>
            </h2>
            <div id="collapse-@prefabEntry.Key" class="accordion-collapse collapse" aria-labelledby="heading-@prefabEntry.Key" data-bs-parent="#accordionExample">
                <div class="accordion-body">
                    @foreach (var variation in prefabEntry.Value)
                    {
                        <VariationComponent Variation="@variation" />
                    }
                </div>
            </div>
        </div>
    }
</div>

@code {
    private Dictionary<string, bool> prefabVisibility = new Dictionary<string, bool>();

    private bool IsPrefabVisible(string prefabKey)
    {
        return prefabVisibility.ContainsKey(prefabKey) && prefabVisibility[prefabKey];
    }

    private void TogglePrefabVisibility(string prefabKey)
    {
        if (prefabVisibility.ContainsKey(prefabKey))
        {
            prefabVisibility[prefabKey] = !prefabVisibility[prefabKey];
        }
        else
        {
            prefabVisibility[prefabKey] = true; // Wenn der Key noch nicht existiert, setze ihn auf "sichtbar"
        }
    }
}